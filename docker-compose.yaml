version: "3.0"

services:
  nginx:
    build: ./nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      - /etc/letsencrypt:/etc/letsencrypt
      - /tmp/acme-challenge:/tmp/acme-challenge
    links:
      - prod
    restart: always
  letsencrypt:
    container_name: "certbot"
    image: certbot/certbot
    command: sh -c "certbot certonly --webroot -w /tmp/acme-challenge/ -d strapi.mrpitch.rocks --text --agree-tos --email mrpitch@outlook.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
    entrypoint: ""
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/tmp/acme-challenge:/tmp/acme-challenge"
    environment:
      - TERM=xterm
  prod:
      build:
        context: . 
        dockerfile: ./Dockerfile
      # image: strapi-playground-prod
      container_name: strapi-playground-prod
      restart: unless-stopped
      environment:
        NODE_ENV: production
        DATABASE_CLIENT: postgres
        DATABASE_HOST: db_prod
        DATABASE_PORT: 5432
        DATABASE_NAME: ${DATABASE_NAME}
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      volumes:
        - ./config:/usr/src/app/config
        - ./src:/usr/src/app/src
        - ./package.json:/usr/src/app/package.json
        - ./.env:/usr/src/app/.env
        # - ./public/uploads:/usr/src/app/public/uploads
      ports:
        - 1337:1337
      networks:
      - strapi_playground
      depends_on:
        - db_prod
      command: pnpm start:prod
  db_prod:
    container_name: strapi-playground-db-prod
    image: 'postgres:15.1'
    env_file: .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - db_data_prod:/var/lib/postgresql/data/
      #- ./database/db_strapi_latest.sql.gz:/docker-entrypoint-initdb.d/db_strapi_latest.sql.gz
    ports:
      - "5432:5432"
    networks:
      - strapi_playground

volumes:
  db_data_prod:

networks:
  strapi_playground:
    name: Strapi_Playground
    driver: bridge
